namespace Skew.Tests {
  def testFormatting {

testFormat("
01234abcde56789
", "
01234abcde56789
     ~~~~~
", 5, 10, 15)

testFormat("
abcde0123456789
", "
abcde01...
~~~~~
", 0, 5, 10)

testFormat("
0123456789abcde
", "
...89abcde
     ~~~~~
", 10, 15, 10)

testFormat("
01234abcde56789
", "
...abcd...
   ~~~~
", 5, 10, 10)

testFormat("
01234abcde56789
", "
...abcde...
   ~~~~~
", 5, 10, 11)

testFormat("
abcdefghij0123456789klmnopqrst
", "
...ij0123456789kl...
     ~~~~~~~~~~
", 10, 20, 20)

testFormat("
0123456789
", "
01234...
 ~~~~
", 1, 7, 8)

testFormat("
0123456789
", "
01234...
  ~~~
", 2, 6, 8)

testFormat("
0123456789
", "
...34...
   ~~
", 3, 5, 8)

testFormat("
01234💩💩💩💩💩01234
", "
01234💩💩💩💩💩01234
     ~~~~~
", "01234".count, "01234💩💩💩💩💩".count, 20)

testFormat("
💩💩💩💩💩01234012340123401234
", "
💩💩💩💩💩01...
~~~~~
", 0, "💩💩💩💩💩".count, 10)

testFormat("
01234012340123401234💩💩💩💩💩
", "
...34💩💩💩💩💩
     ~~~~~
", "01234012340123401234".count, "01234012340123401234💩💩💩💩💩".count, 10)

testFormat("
😄😉😍😗😜😔😞😢😭😪😥😰😅😓😩😨😱😠😡😎
", "
😄😉😍😗😜😔😞...
~~~~~
", 0, "😄😉😍😗😜".count, 10)

testFormat("
😄😉😍😗😜😔😞😢😭😪😥😰😅😓😩😨😱😠😡😎
", "
...😓😩😨😱😠😡😎
     ~~~~~
", "😄😉😍😗😜😔😞😢😭😪😥😰😅😓😩".count, "😄😉😍😗😜😔😞😢😭😪😥😰😅😓😩😨😱😠😡😎".count, 10)

testFormat("
😄😉😍😗😜😔😞😢😭😪😥😰😅😓😩😨😱😠😡😎
", "
...😔😞😢😭...
   ~~~~
", "😄😉😍😗😜".count, "😄😉😍😗😜😔😞😢😭😪😥😰😅😓😩".count, 10)

testFormat("
\ta\tab\tabc\tabcd\tabcde\tabcdef\tabcdefg\tabcdefgh\tx
", "
        a       ab      abc     abcd    abcde   abcdef  abcdefg abcdefgh        x
~~~~~~~~
", 0, 1, 0)

testFormat("
\t0\t1\t2\t3\t4
", "
...  2       3       4
              ~~~~~~~
", 8, 9, 22)

  }
}

{"ast":null,"code":"import axios from 'axios';\nconst API_ENDPOINTS = {\n  // Add your image search API endpoints here\n  unsplash: 'https://api.unsplash.com/photos',\n  pexels: 'https://api.pexels.com/v1/search'\n  // Add more APIs as needed\n};\nconst fetchImagesFromUnsplash = async (query, page = 1, perPage = 30) => {\n  const response = await axios.get(API_ENDPOINTS.unsplash, {\n    params: {\n      query,\n      page,\n      per_page: perPage\n    },\n    headers: {\n      Authorization: `Client-ID YOUR_UNSPLASH_ACCESS_KEY`\n    }\n  });\n  return response.data;\n};\nconst fetchImagesFromPexels = async (query, page = 1, perPage = 30) => {\n  const response = await axios.get(API_ENDPOINTS.pexels, {\n    params: {\n      query,\n      page,\n      per_page: perPage\n    },\n    headers: {\n      Authorization: `Bearer YOUR_PEXELS_ACCESS_KEY`\n    }\n  });\n  return response.data.photos;\n};\n\n// Add more fetch functions for other APIs as needed\n\nexport const fetchImages = async (query, page = 1, perPage = 30) => {\n  const unsplashImages = await fetchImagesFromUnsplash(query, page, perPage);\n  const pexelsImages = await fetchImagesFromPexels(query, page, perPage);\n\n  // Combine and return images from all sources\n  return [...unsplashImages, ...pexelsImages];\n};","map":{"version":3,"names":["axios","API_ENDPOINTS","unsplash","pexels","fetchImagesFromUnsplash","query","page","perPage","response","get","params","per_page","headers","Authorization","data","fetchImagesFromPexels","photos","fetchImages","unsplashImages","pexelsImages"],"sources":["/Users/taderiscon/Documents/GitHub/fornevercollective.github.io/image-indexer-app/src/utils/imageSearchApis.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_ENDPOINTS = {\n    // Add your image search API endpoints here\n    unsplash: 'https://api.unsplash.com/photos',\n    pexels: 'https://api.pexels.com/v1/search',\n    // Add more APIs as needed\n};\n\nconst fetchImagesFromUnsplash = async (query, page = 1, perPage = 30) => {\n    const response = await axios.get(API_ENDPOINTS.unsplash, {\n        params: {\n            query,\n            page,\n            per_page: perPage,\n        },\n        headers: {\n            Authorization: `Client-ID YOUR_UNSPLASH_ACCESS_KEY`,\n        },\n    });\n    return response.data;\n};\n\nconst fetchImagesFromPexels = async (query, page = 1, perPage = 30) => {\n    const response = await axios.get(API_ENDPOINTS.pexels, {\n        params: {\n            query,\n            page,\n            per_page: perPage,\n        },\n        headers: {\n            Authorization: `Bearer YOUR_PEXELS_ACCESS_KEY`,\n        },\n    });\n    return response.data.photos;\n};\n\n// Add more fetch functions for other APIs as needed\n\nexport const fetchImages = async (query, page = 1, perPage = 30) => {\n    const unsplashImages = await fetchImagesFromUnsplash(query, page, perPage);\n    const pexelsImages = await fetchImagesFromPexels(query, page, perPage);\n    \n    // Combine and return images from all sources\n    return [...unsplashImages, ...pexelsImages];\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAG;EAClB;EACAC,QAAQ,EAAE,iCAAiC;EAC3CC,MAAM,EAAE;EACR;AACJ,CAAC;AAED,MAAMC,uBAAuB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,IAAI,GAAG,CAAC,EAAEC,OAAO,GAAG,EAAE,KAAK;EACrE,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACR,aAAa,CAACC,QAAQ,EAAE;IACrDQ,MAAM,EAAE;MACJL,KAAK;MACLC,IAAI;MACJK,QAAQ,EAAEJ;IACd,CAAC;IACDK,OAAO,EAAE;MACLC,aAAa,EAAE;IACnB;EACJ,CAAC,CAAC;EACF,OAAOL,QAAQ,CAACM,IAAI;AACxB,CAAC;AAED,MAAMC,qBAAqB,GAAG,MAAAA,CAAOV,KAAK,EAAEC,IAAI,GAAG,CAAC,EAAEC,OAAO,GAAG,EAAE,KAAK;EACnE,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACR,aAAa,CAACE,MAAM,EAAE;IACnDO,MAAM,EAAE;MACJL,KAAK;MACLC,IAAI;MACJK,QAAQ,EAAEJ;IACd,CAAC;IACDK,OAAO,EAAE;MACLC,aAAa,EAAE;IACnB;EACJ,CAAC,CAAC;EACF,OAAOL,QAAQ,CAACM,IAAI,CAACE,MAAM;AAC/B,CAAC;;AAED;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOZ,KAAK,EAAEC,IAAI,GAAG,CAAC,EAAEC,OAAO,GAAG,EAAE,KAAK;EAChE,MAAMW,cAAc,GAAG,MAAMd,uBAAuB,CAACC,KAAK,EAAEC,IAAI,EAAEC,OAAO,CAAC;EAC1E,MAAMY,YAAY,GAAG,MAAMJ,qBAAqB,CAACV,KAAK,EAAEC,IAAI,EAAEC,OAAO,CAAC;;EAEtE;EACA,OAAO,CAAC,GAAGW,cAAc,EAAE,GAAGC,YAAY,CAAC;AAC/C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}